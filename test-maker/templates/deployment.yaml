apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.services.testService.label }}"
spec:
  selector:
    matchLabels:
      app: "{{ .Values.services.testService.label }}"
  revisionHistoryLimit: 0
  template:
    metadata:
      labels:
        app: "{{ .Values.services.testService.label }}"
    spec:
      containers:
      - name: "{{ .Values.services.testService.label }}"
        image: "{{ .Values.registry }}/{{ .Values.services.testService.label }}:{{ .Values.services.testService.tag }}"
        ports:
        - containerPort: 80
        envFrom:
          - secretRef:
              name: test-service-secret
          - secretRef:
              name: common-secret
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.services.eventService.label }}"
spec:
  selector:
    matchLabels:
      app: "{{ .Values.services.eventService.label }}"
  revisionHistoryLimit: 0
  template:
    metadata:
      labels:
        app: "{{ .Values.services.eventService.label }}"
    spec:
      containers:
      - name: "{{ .Values.services.eventService.label }}"
        image: "{{ .Values.registry }}/{{ .Values.services.eventService.label }}:{{ .Values.services.eventService.tag }}"
        ports:
        - containerPort: 80
        envFrom:
          - secretRef:
              name: event-service-secret
          - secretRef:
              name: common-secret
