apiVersion: v1
kind: ConfigMap
metadata:
  name: custom-entrypoint
data:
  custom-entrypoint.sh: |
    #!/bin/sh
    CONFIGDIR="/var/lib/ngrok"
    ARGS=""

    # Set the authorization token.
    if [ -n "$NGROK_AUTHTOKEN" ]; then
        cat > $CONFIGDIR/auth-config.yml <<EOF
        version: 2
        authtoken: $NGROK_AUTHTOKEN
    EOF
        ARGS="$ARGS --config=$CONFIGDIR/auth-config.yml"
    fi

    # Set the config file location; make sure agent uses default config even if NGROK_AUTHTOKEN is set
    if [ -n "$NGROK_CONFIG" ]; then
        ARGS="$ARGS --config=$NGROK_CONFIG"
    else
        ARGS="--config=$CONFIGDIR/ngrok.yml $ARGS"
    fi

    if [ $# -eq 0 ]; then
        ARGS="start $ARGS --all"
    fi

    sh /push-ngrok-endpoint.sh &

    exec ngrok $TYPE $HOST:$PORT --log=/ngrok-output.txt
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: push-ngrok-endpoint
data:
  push-ngrok-endpoint.sh: |
    while ! grep "started tunnel" /ngrok-output.txt;do echo "not found";sleep 1;done
    apk add git
    apk add openssh
    mkdir -p /root/.ssh
    eval "$(ssh-agent -s)"
    echo "$SSH_PRIVATE_KEY" | tr -d '\r' > /root/.ssh/id_rsa
    chmod 700 /root/.ssh/id_rsa
    eval "$(ssh-agent -s)"
    ssh-add /root/.ssh/id_rsa
    ssh-keyscan -t rsa github.com >> /root/.ssh/known_hosts
    echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > /root/.ssh/config
    chmod 644 /root/.ssh/known_hosts
    git config --global user.email "kinhnv1801@gmail.com"
    git config --global user.name "Nguyen Van Kinh"
    
    while [ $is_success -ne 1 ]
    do
        git clone $GITHUB_NGROK_SOURCE target
        httpsVar=$(grep -Eo 'https://[^ >]+' ngrok-output.txt|tail -1)
        if [ -z "$httpsVar" ]
        then
            echo "\$httpsVar is empty"
        else
            if [[ $HOST == "argocd-server"* ]]
            then
                sed -i -E "s|argocd:.*|argocd: [${httpsVar}](${httpsVar})|g" target/README.md
            else if [[ $HOST == "kafka-ui"* ]]
            then
                sed -i -E "s|kafka ui:.*|kafka ui: [${httpsVar}](${httpsVar})|g" target/README.md
            else
                printf '{ "https": "%s" }\n' $httpsVar > target/$HOST
            fi
        fi
        tcpVar=$(grep -Eo 'tcp://[^ >]+' ngrok-output.txt|head -1)
        if [ -z "$tcpVar" ]
        then
            echo "\$tcpVar is empty"
        else
            printf '{ "tcp": "%s" }\n' $tcpVar > target/$HOST
        fi
        cd target
        git add . && git commit -m "update $HOST"
        git pull
        if git push
        then
            echo "git push succeeded"
            is_success=1
        else
            echo "git push failed"
            cd ..
            rm -rf target
        fi
    done