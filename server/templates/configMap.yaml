apiVersion: v1
kind: ConfigMap
metadata:
  name: vault
data:
  vault-config.json: |
    {
      "backend": {
        "file": {
          "path": "/var/opt/vault/data"
        }
      },
      "listener": {
        "tcp":{
          "address": "0.0.0.0:8200",
          "tls_disable": 1
        }
      },
      "ui": true
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: gitlab-runnner
data:
  config.toml: |
    concurrent = 6
    check_interval = 0

    [session_server]
      session_timeout = 1800

    [[runners]]
      name = "gitlab-runner-brothers-shell"
      url = "https://gitlab.com/"
      id = 17466550
      token = "spsYrHskFAgPdRcUaZ7f"
      token_obtained_at = 2022-09-11T17:22:16Z
      token_expires_at = 0001-01-01T00:00:00Z
      executor = "shell"
      [runners.custom_build_dir]
      [runners.cache]
        [runners.cache.s3]
        [runners.cache.gcs]
        [runners.cache.azure]

    [[runners]]
      name = "gitlab-runner-brothers-docker"
      url = "https://gitlab.com/"
      id = 17466551
      token = "4zymz_mqhqxiLRuC36Jy"
      token_obtained_at = 2022-09-11T17:22:16Z
      token_expires_at = 0001-01-01T00:00:00Z
      executor = "docker"
      [runners.custom_build_dir]
      [runners.cache]
        [runners.cache.s3]
        [runners.cache.gcs]
        [runners.cache.azure]
      [runners.docker]
        host = "tcp://docker:2375"
        tls_verify = false
        image = "ubuntu"
        privileged = false
        disable_entrypoint_overwrite = false
        oom_kill_disable = false
        disable_cache = false
        volumes = ["/cache"]
        shm_size = 0

    [[runners]]
      name = "kinhnv-docker"
      url = "https://gitlab.com/"
      id = 27322930
      token = "CG8rdSmBgZDG8xkfKBy9"
      token_obtained_at = 2023-08-29T16:35:15Z
      token_expires_at = 0001-01-01T00:00:00Z
      executor = "docker"
      [runners.cache]
        MaxUploadedArchiveSize = 0
      [runners.docker]
        host = "tcp://docker:2375"
        tls_verify = false
        image = "ubuntu"
        privileged = false
        disable_entrypoint_overwrite = false
        oom_kill_disable = false
        disable_cache = false
        volumes = ["/cache"]
        shm_size = 0
  custom-entrypoint.sh: |
    #!/bin/bash

    # gitlab-runner data directory
    DATA_DIR="/etc/gitlab-runner"
    CONFIG_FILE=${CONFIG_FILE:-$DATA_DIR/config.toml}
    # custom certificate authority path
    CA_CERTIFICATES_PATH=${CA_CERTIFICATES_PATH:-$DATA_DIR/certs/ca.crt}
    LOCAL_CA_PATH="/usr/local/share/ca-certificates/ca.crt"

    update_ca() {
      echo "Updating CA certificates..."
      cp "${CA_CERTIFICATES_PATH}" "${LOCAL_CA_PATH}"
      update-ca-certificates --fresh >/dev/null
    }

    if [ -f "${CA_CERTIFICATES_PATH}" ]; then
      # update the ca if the custom ca is different than the current
      cmp --silent "${CA_CERTIFICATES_PATH}" "${LOCAL_CA_PATH}" || update_ca
    fi

    apt update && apt install wget
    curl https://download.docker.com/linux/static/stable/x86_64/docker-20.10.9.tgz -o docker-20.10.9.tgz
    tar xzvf docker-20.10.9.tgz
    cp docker/* /usr/bin/
    curl -L https://github.com/docker/compose/releases/download/1.20.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
    chmod +x /usr/local/bin/docker-compose
    wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
    chmod a+x /usr/local/bin/yq

    # launch gitlab-runner passing all arguments
    exec gitlab-runner "$@"
